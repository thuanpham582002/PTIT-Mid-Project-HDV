@startuml
class service.RegistrationService {
- UserRepository userRepository
- PasswordEncoder passwordEncoder
- UserService userService
+ void registerUser(User)
}

interface repository.AccessibilityRepository {
~ Optional<Accessibility> findByName(String)
}

class service.UserService {
- UserRepository userRepository
- AccessibilityRepository AccessibilityRepository
- PasswordEncoder passwordEncoder
+ UserDetails loadUserByUsername(String)
+ User saveUser(User)
+ User editUser(Long,User)
+ void deleteUser(Long)
+ Accessibility saveAccessibility(Accessibility)
+ User addAccessibilityToUser(String,String)
+ void deleteUserAccessibility(String,String)
+ List<User> getAllUsers()
}

class controller.UserController {
- UserService userService
+ List<User> getAllUsers()
+ User saveUser(User)
+ User editUser(Long,User)
+ void deleteUser(Long)
+ Accessibility saveAccessibility(Accessibility)
+ User addAccessibilityToUser(String,String)
+ void deleteUserAccessibility(String,String)
}


interface repository.UserRepository {
~ Optional<User> findByUsername(String)
}

class controller.RegistrationController {
- RegistrationService registrationService
+ void registerUser(User)
}

class entities.Accessibility {
- Long id
- String name
- Collection<User> users
}

class entities.User {
- Long id
- String name
- String email
- String userName
- String password
- List<Accessibility> accessibilitys
- IndentityCard indentityCard
- DriverLicense? driverLicense
- Date created_at
- Date updated_at
}

class entities.DriverLicense {
- Long id
- String number
- String imageBase64
- Date created_at
- Date updated_at
}
class entities.IndentityCard {
- Long id
- String number
- String imageBase64
- Date created_at
- Date updated_at
}

class controller.DriverLicenseController {
- DriverLicenseService driverLicenseService
+ DriverLicense saveDriverLicense(DriverLicense)
+ DriverLicense editDriverLicense(Long,DriverLicense)
+ void deleteDriverLicense(Long)
}

class service.DriverLicenseService {
- DriverLicenseRepository driverLicenseRepository
+ DriverLicense saveDriverLicense(DriverLicense)
+ DriverLicense editDriverLicense(Long,DriverLicense)
+ void deleteDriverLicense(Long)
}

class repository.DriverLicenseRepository {
~ Optional<DriverLicense> findByNumber(String)
}

class controller.IndentityCardController {
- IndentityCardService indentityCardService
+ IndentityCard saveIndentityCard(IndentityCard)
+ IndentityCard editIndentityCard(Long,IndentityCard)
+ void deleteIndentityCard(Long)
}

class service.IndentityCardService {
- IndentityCardRepository indentityCardRepository
+ IndentityCard saveIndentityCard(IndentityCard)
+ IndentityCard editIndentityCard(Long,IndentityCard)
+ void deleteIndentityCard(Long)
}

class repository.IndentityCardRepository {
~ Optional<IndentityCard> findByNumber(String)
}

org.springframework.data.jpa.repository.JpaRepository <|-- repository.AccessibilityRepository
org.springframework.data.jpa.repository.JpaRepository <|-- repository.UserRepository
org.springframework.data.jpa.repository.JpaRepository <|-- repository.DriverLicenseRepository
org.springframework.data.jpa.repository.JpaRepository <|-- repository.IndentityCardRepository

controller.UserController --> service.UserService

service.UserService --> repository.UserRepository
service.UserService --> repository.AccessibilityRepository

controller.RegistrationController --> service.RegistrationService

service.RegistrationService --> repository.UserRepository

entities.User "1" o-- "many" entities.Accessibility : has

entities.User "1" *-- "1" entities.IndentityCard : has

entities.User "0-1" *-- "1" entities.DriverLicense : has

controller.DriverLicenseController --> service.DriverLicenseService

service.DriverLicenseService --> repository.DriverLicenseRepository

controller.IndentityCardController --> service.IndentityCardService

service.IndentityCardService --> repository.IndentityCardRepository





@enduml