name: Build and Deploy Dev

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  update_env_dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get submodule commit hashes
        run: |
          SUBMODULE_HASHES=$(git submodule status | awk '{print $1, $2}')
          echo "$SUBMODULE_HASHES" > submodule_hashes.txt

      - name: Create .env.dev file
        run: |
          echo "# Submodule commit hashes for development" > ./config/.env.dev
          while read -r line; do
            submodule=$(echo $line | awk '{print $2}')
            hash=$(echo $line | awk '{print $1}')
            echo "${submodule^^}_COMMIT_HASH=$hash" >> ./config/.env.dev
          done < submodule_hashes.txt

      - name: Commit and push .env.dev
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./config/.env.dev
          git commit -m "Update submodule hashes for development"
          git push
  build:
    needs: [update_env_dev]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Print current directory
        run: |
          echo "Current directory: $GITHUB_WORKSPACE"
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      # Gradle action from GitHub marketplace is used for better maintainability
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Push Docker Hub
        run: |
          pwd
      - name: Update submodules
        run: |
          chmod +x gradlew
          gradle buildAllProjects
            docker-compose -f compose-dev.yaml build
      - name: push Docker image
        run: |
          docker compose -f compose-dev.yaml --env-file ./config/.env.dev build --push
  deploy:
    needs: [build]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}
      - name: push Docker image
        run: |
          docker compose -f compose-dev.yaml --env-file ./config/.env.dev up -d >/dev/null 2>&1